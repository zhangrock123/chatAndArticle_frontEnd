module.exports=(function(){var widgetDate=function(){this._dicts={convertMs:{ms:1,s:1000,m:1000*60,h:1000*60*60,d:1000*60*60*24},dateAttr:{yyyy:'getFullYear',MM:'getMonth',dd:'getDate',hh:'getHours',mm:'getMinutes',ss:'getSeconds'},dateYMD:{yyyy:'getFullYear',MM:'getMonth',dd:'getDate'},workDayName:{cn_1:['周日','周一','周二','周三','周四','周五','周六'],cn_2:['星期一','星期二','星期三','星期四','星期五','星期六','星期日'],cn_3:['一','二','三','四','五','六','日'],en_1:['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],en_2:['Mon','Tues','Wed','Thur','Fri','Sat','Sun']},monthName:{cn_1:['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月'],cn_2:['一','二','三','四','五','六','七','八','九','十','十一','十二'],en_1:['January','February','March','April','May','June','July','August','September','October','November','December'],en_2:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']}}};widgetDate.prototype={_diff:function(start,end,unit){return(end.getTime()-start.getTime())/(this._dicts.convertMs[unit||'ms']||1)},_strToDate:function(dateStr){return this._arrToDate.call(this,dateStr.split(/\/|-|\s|:/g))},_arrToDate:function(dateArr){if(dateArr&&!(dateArr instanceof Array))return'';return eval('new Date('+dateArr.join(',')+')')},_dateToStr:function(date,format,isForceTwo){var self=this,res='';return(format||'yyyy-MM-dd').replace(/yyyy|MM|dd|hh|mm|ss/g,function($1){res=date[self._dicts.dateAttr[$1]]();if('MM'==$1)res++;if(isForceTwo&&$1!='yyyy')return self._dateTwoNum(res);return res})},_unixToStr:function(unixTime,format,isForceTwo){var date=this._unixToDate.call(this,unixTime);return this._dateToStr.call(this,date,format,isForceTwo)},_dateToDict:function(date,isForceTwo){date=date||new Date();var dateInfo={},dateAttr=this._dicts.dateAttr;for(var i in dateAttr)dateInfo[i]=(isForceTwo&&'yyyy'!=i)?this._dateTwoNum(date[dateAttr[i]]()):date[dateAttr[i]]();return dateInfo},_workDayName:function(date,version){return this._dicts.workDayName[version||'cn_1'][date.getDay()]},_monthName:function(date,version){return this._dicts.monthName[version||'cn_1'][date.getMonth()]},_unixToDate:function(unixTime){return new Date((unixTime*1e+3).toString().slice(0,13)*1)},_monthHaveDays:function(date){date=date||new Date();var self=this,nextMonth=this._nextMonth(date);return this._diff(self._curMonth(date),nextMonth,'d')},_prevMonth:function(date){return this._dateCalc.call(this,date,1)},_nextMonth:function(date){return this._dateCalc.call(this,date,2)},_curMonth:function(date){return this._dateCalc.call(this,date,null)},_dateCalc:function(date,type){date=date||new Date();var dateInfo={},dateAttr=this._dicts.dateYMD;for(var i in dateAttr)dateInfo[i]=date[dateAttr[i]]();if(type==1){if(dateInfo.MM<=0){dateInfo.yyyy--;dateInfo.MM=12}else dateInfo.MM--}else if(type==2){if(dateInfo.MM>=11){dateInfo.yyyy++;dateInfo.MM=0}else dateInfo.MM++}return new Date(dateInfo.yyyy,dateInfo.MM,1)},_dateTwoNum:function(str){return((str+'').length<2?'0':'')+str},_lastDay:function(date){date=date||new Date();var dateInfo={},dateAttr=this._dicts.dateYMD;for(var i in dateAttr)dateInfo[i]=date[dateAttr[i]]();dateInfo.dd=this._monthHaveDays(date);return new Date(dateInfo.yyyy,dateInfo.MM,dateInfo.dd)},_plainDateDict:function(plainDateStr){if(!plainDateStr)return plainDateStr;var reg=this._plainStrReg(plainDateStr,',',true);plainDateStr=plainDateStr.toString().replace(reg.reg,reg.matches);var plainDateArr=plainDateStr.split(/,/g);plainDateArr[1]--;return plainDateArr},_plainDate:function(plainDateStr){plainDateStr+='';var plainDateArr=this._plainDateDict(plainDateStr)||'';return this._arrToDate.call(this,plainDateArr)},_plainDateStr:function(plainDateStr,format,isNotDefault){if(!plainDateStr)return'';var self=this,plainDateArr=self._plainDateDict(plainDateStr)||'',res='';if(plainDateArr&&!(plainDateArr instanceof Array))return plainDateStr;var plainDateDict={yyyy:plainDateArr[0],MM:plainDateArr[1],dd:plainDateArr[2],hh:0,mm:0,ss:0};var dictLen=plainDateArr.length;if(dictLen==6){plainDateDict.hh=plainDateArr[3];plainDateDict.mm=plainDateArr[4];plainDateDict.ss=plainDateArr[5]}return(format||'yyyy-MM-dd').replace(/yyyy|MM|dd|hh|mm|ss/g,function($1){res=plainDateDict[$1];'MM'==$1&&res++;if(!isNotDefault)return self._dateTwoNum(res);return res})},_plainStr:function(plainDateStr,mask){if(!plainDateStr)return plainDateStr;mask=mask||'/';var reg=this._plainStrReg(plainDateStr,mask,false);return plainDateStr.toString().replace(reg.reg,reg.matches)},_plainStrReg:function(plainDateStr,mask,isAll){var reg='',matches='';mask=mask||',';if(8==plainDateStr.length){reg=/(\d{4})(\d{2})(\d{2})/g;matches='$1'+mask+'$2'+mask+'$3'}else{reg=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/g;matches='$1'+mask+'$2'+mask+'$3 '+(isAll?mask+'$4'+mask+'$5'+mask+'$6':'$4:$5:$6')}return{reg:reg,matches:matches}}};return new widgetDate()})();